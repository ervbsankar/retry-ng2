{"version":3,"sources":["batchMonitoring/func-area.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uBAAuC,eAAe,CAAC,CAAA;AACvD,yBAAuB,iBAAiB,CAAC,CAAA;AACzC,mCAA6B,6BAA6B,CAAC,CAAA;AAO3D;IAgBI,YAAoB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;QALxC,WAAM,GAAkB,EAAE,CAAC;QAE3B,YAAO,GAAC,EAAE,CAAC;QAIf,IAAI,CAAC,IAAI,GAAG,IAAI,iBAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,IAAI,EAAC,WAAW,CAAC,CAAC;IACtE,CAAC;IAjBD,QAAQ;QACJ,YAAY,CAAC,OAAO,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG;YACrB,EAAE,CAAA,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC;gBAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACP,CAAC;IAaD,YAAY,CAAC,GAAW;QACpB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG;YACnD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACvB,CAAC,EACD,GAAG;YACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACpB,CAAC,EACD;YACI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,CAAC,CACJ,CAAC;IACN,CAAC;AACL,CAAC;AAvBG;IAAC,YAAK,CAAC,QAAQ,CAAC;;mDAAA;AAfpB;IAAC,gBAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,WAAW,EAAE,sCAAsC;QACnD,SAAS,EAAE,CAAC,mBAAmB,CAAC;KACnC,CAAC;;qBAAA;AAEW,yBAAiB,oBAgC7B,CAAA","file":"batchMonitoring/func-area.component.js","sourcesContent":["import {Component, Input, OnInit} from \"@angular/core\";\nimport {DatePipe} from \"@angular/common\";\nimport {RestApiService} from \"../service/rest-api.service\";\n@Component({\n    selector: \"mmis-notices\",\n    templateUrl: \"./app/batchMonitoring/func-area.html\",\n    styleUrls: [\"batch-monitor.css\"]\n})\n\nexport class FuncAreaComponent implements OnInit {\n    ngOnInit(): void {\n        localStorage.setItem(\"funcArea\",this.funcArea);\n        this.jobList = this.loginService.getJobList(this.funcArea);\n        this.jobList.forEach((job) => {\n            if(!(job.database == null)) this.getJobStatus(job.database);\n        });\n    }\n\n    @Input('master') funcArea: string;\n    private date: string;\n    private result: Array<Object> = [];\n    private result1: Array<Object>;\n    private jobList=[];\n\n\n    constructor(private loginService: RestApiService){\n        this.date = new DatePipe('en-US').transform(new Date,'dd-MMM-yy');\n    }\n\n    getJobStatus(job: string): void {\n        this.loginService.getJobStatus(job,this.date).subscribe(res => {\n                this.result1 = res;\n            },\n            err => {\n                console.log(err)\n            },\n            () => {\n                this.result.push.apply(this.result,this.result1);\n            }\n        );\n    }\n}\n"],"sourceRoot":"/source/"}